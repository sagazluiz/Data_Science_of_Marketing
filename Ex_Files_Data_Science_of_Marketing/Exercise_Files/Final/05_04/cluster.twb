<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cluster-tableau' inline='true' name='federated.12jmbcg1tna1v91ghi6f20uw6dcs' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cluster-tableau' name='textscan.0cyini11b6d7mz1btk5n90fle783'>
            <connection class='textscan' directory='/Users/chrisdallavilla/Desktop/Exercise_Files/05_04' filename='cluster-tableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0cyini11b6d7mz1btk5n90fle783' name='cluster-tableau.csv' table='[cluster-tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Email' ordinal='1' />
            <column datatype='integer' name='Behavior-1' ordinal='2' />
            <column datatype='integer' name='Behavior-2' ordinal='3' />
            <column datatype='integer' name='Behavior-3' ordinal='4' />
            <column datatype='integer' name='Brand-Preference' ordinal='5' />
            <column datatype='integer' name='CTA' ordinal='6' />
            <column datatype='integer' name='Demo-Age' ordinal='7' />
            <column datatype='string' name='Demo-Geo' ordinal='8' />
            <column datatype='integer' name='Demo-Sex' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Email</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Email]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Email</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Behavior-1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Behavior-1]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Behavior-1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Behavior-2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Behavior-2]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Behavior-2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Behavior-3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Behavior-3]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Behavior-3</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Brand-Preference</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Brand-Preference]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Brand-Preference</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CTA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CTA]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>CTA</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Demo-Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Demo-Age]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Demo-Age</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Demo-Geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Demo-Geo]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Demo-Geo</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Demo-Sex</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Demo-Sex]</local-name>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias>Demo-Sex</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cluster-tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[CTA &amp; Demo-Age (clusters)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CTA &amp; Demo-Age]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(6,66)</value>
            <value>(6,67)</value>
            <value>(6,68)</value>
            <value>(7,52)</value>
            <value>(7,58)</value>
            <value>(7,66)</value>
            <value>(8,47)</value>
            <value>(8,53)</value>
            <value>(8,56)</value>
            <value>(8,58)</value>
            <value>(8,60)</value>
            <value>(8,61)</value>
            <value>(8,66)</value>
            <value>(9,45)</value>
            <value>(9,48)</value>
            <value>(9,51)</value>
            <value>(9,53)</value>
            <value>(9,56)</value>
            <value>(9,60)</value>
            <value>(10,50)</value>
            <value>(10,53)</value>
            <value>(10,63)</value>
            <value>(10,65)</value>
            <value>(11,55)</value>
            <value>(11,58)</value>
            <value>(11,60)</value>
            <value>(11,62)</value>
            <value>(11,64)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(1,41)</value>
            <value>(1,43)</value>
            <value>(2,34)</value>
            <value>(2,35)</value>
            <value>(2,37)</value>
            <value>(2,38)</value>
            <value>(3,32)</value>
            <value>(3,37)</value>
            <value>(3,38)</value>
            <value>(3,44)</value>
            <value>(3,46)</value>
            <value>(4,33)</value>
            <value>(4,36)</value>
            <value>(4,39)</value>
            <value>(5,29)</value>
            <value>(5,30)</value>
            <value>(5,31)</value>
            <value>(5,33)</value>
            <value>(5,36)</value>
            <value>(5,37)</value>
            <value>(5,38)</value>
            <value>(5,39)</value>
            <value>(5,41)</value>
            <value>(6,32)</value>
            <value>(6,35)</value>
            <value>(6,41)</value>
            <value>(6,42)</value>
            <value>(7,34)</value>
            <value>(7,35)</value>
            <value>(7,39)</value>
            <value>(7,43)</value>
            <value>(8,36)</value>
            <value>(9,39)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 3&quot;'>
            <value>(1,47)</value>
            <value>(1,50)</value>
            <value>(1,52)</value>
            <value>(1,56)</value>
            <value>(1,58)</value>
            <value>(2,48)</value>
            <value>(2,55)</value>
            <value>(2,59)</value>
            <value>(2,62)</value>
            <value>(2,63)</value>
            <value>(3,49)</value>
            <value>(3,50)</value>
            <value>(3,55)</value>
            <value>(3,58)</value>
            <value>(3,62)</value>
            <value>(3,63)</value>
            <value>(3,65)</value>
            <value>(4,48)</value>
            <value>(4,50)</value>
            <value>(4,53)</value>
            <value>(4,56)</value>
            <value>(4,58)</value>
            <value>(4,59)</value>
            <value>(4,61)</value>
            <value>(4,62)</value>
            <value>(4,64)</value>
            <value>(4,68)</value>
            <value>(5,49)</value>
            <value>(5,59)</value>
            <value>(5,60)</value>
            <value>(5,61)</value>
            <value>(5,63)</value>
            <value>(5,64)</value>
            <value>(5,67)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 4&quot;'>
            <value>(10,41)</value>
            <value>(10,43)</value>
            <value>(11,34)</value>
            <value>(11,36)</value>
            <value>(11,40)</value>
            <value>(11,41)</value>
            <value>(11,42)</value>
            <value>(11,46)</value>
            <value>(11,47)</value>
            <value>(11,48)</value>
            <value>(12,36)</value>
            <value>(12,42)</value>
            <value>(12,47)</value>
            <value>(12,48)</value>
            <value>(13,32)</value>
            <value>(13,34)</value>
            <value>(13,37)</value>
            <value>(13,40)</value>
            <value>(13,45)</value>
            <value>(13,46)</value>
            <value>(14,32)</value>
            <value>(14,35)</value>
            <value>(14,42)</value>
            <value>(14,43)</value>
            <value>(14,45)</value>
            <value>(14,48)</value>
            <value>(15,41)</value>
            <value>(15,43)</value>
            <value>(15,47)</value>
            <value>(15,48)</value>
            <value>(16,37)</value>
            <value>(16,40)</value>
            <value>(16,46)</value>
            <value>(17,37)</value>
            <value>(17,44)</value>
            <value>(18,35)</value>
            <value>(18,36)</value>
            <value>(18,39)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 5&quot;'>
            <value>(12,54)</value>
            <value>(12,58)</value>
            <value>(12,60)</value>
            <value>(12,61)</value>
            <value>(12,68)</value>
            <value>(13,54)</value>
            <value>(13,57)</value>
            <value>(13,63)</value>
            <value>(13,68)</value>
            <value>(14,54)</value>
            <value>(14,57)</value>
            <value>(14,58)</value>
            <value>(14,59)</value>
            <value>(14,62)</value>
            <value>(14,66)</value>
            <value>(15,53)</value>
            <value>(15,55)</value>
            <value>(15,64)</value>
            <value>(15,65)</value>
            <value>(15,67)</value>
            <value>(16,50)</value>
            <value>(16,53)</value>
            <value>(16,55)</value>
            <value>(16,59)</value>
            <value>(16,62)</value>
            <value>(17,53)</value>
            <value>(17,54)</value>
            <value>(17,59)</value>
            <value>(17,62)</value>
            <value>(18,54)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 6&quot;'>
            <value>(6,14)</value>
            <value>(6,18)</value>
            <value>(6,19)</value>
            <value>(6,24)</value>
            <value>(6,25)</value>
            <value>(6,26)</value>
            <value>(6,28)</value>
            <value>(7,14)</value>
            <value>(7,26)</value>
            <value>(7,27)</value>
            <value>(7,31)</value>
            <value>(8,14)</value>
            <value>(8,19)</value>
            <value>(8,21)</value>
            <value>(8,25)</value>
            <value>(8,28)</value>
            <value>(8,31)</value>
            <value>(9,18)</value>
            <value>(9,21)</value>
            <value>(9,22)</value>
            <value>(9,23)</value>
            <value>(9,32)</value>
            <value>(9,34)</value>
            <value>(10,20)</value>
            <value>(10,22)</value>
            <value>(10,23)</value>
            <value>(10,24)</value>
            <value>(10,30)</value>
            <value>(11,17)</value>
            <value>(11,23)</value>
            <value>(11,25)</value>
            <value>(11,30)</value>
            <value>(12,21)</value>
            <value>(12,24)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 7&quot;'>
            <value>(13,13)</value>
            <value>(13,14)</value>
            <value>(13,15)</value>
            <value>(13,18)</value>
            <value>(13,20)</value>
            <value>(14,18)</value>
            <value>(14,20)</value>
            <value>(14,21)</value>
            <value>(14,28)</value>
            <value>(15,16)</value>
            <value>(15,17)</value>
            <value>(15,18)</value>
            <value>(15,19)</value>
            <value>(15,22)</value>
            <value>(16,13)</value>
            <value>(16,20)</value>
            <value>(16,26)</value>
            <value>(16,30)</value>
            <value>(17,13)</value>
            <value>(17,17)</value>
            <value>(17,24)</value>
            <value>(17,25)</value>
            <value>(17,26)</value>
            <value>(18,16)</value>
            <value>(18,20)</value>
            <value>(18,21)</value>
            <value>(18,26)</value>
            <value>(18,27)</value>
            <value>(18,31)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 8&quot;'>
            <value>(1,22)</value>
            <value>(1,23)</value>
            <value>(1,25)</value>
            <value>(1,26)</value>
            <value>(1,27)</value>
            <value>(1,31)</value>
            <value>(2,21)</value>
            <value>(2,31)</value>
            <value>(3,13)</value>
            <value>(3,16)</value>
            <value>(3,19)</value>
            <value>(3,21)</value>
            <value>(3,23)</value>
            <value>(3,30)</value>
            <value>(4,19)</value>
            <value>(4,22)</value>
            <value>(5,13)</value>
            <value>(5,15)</value>
            <value>(5,16)</value>
            <value>(5,23)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[CTA]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Demo-Age]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <group auto-hidden='true' hidden='true' name='[CTA &amp; Demo-Age]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CTA]' />
          <groupfilter function='level-members' level='[Demo-Age]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.398058' measure-ordering='alphabetic' measure-percentage='0.601942' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>8</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[CTA &amp; Demo-Age (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Cluster 3&quot;</bucket>
            <bucket>&quot;Cluster 4&quot;</bucket>
            <bucket>&quot;Cluster 5&quot;</bucket>
            <bucket>&quot;Cluster 6&quot;</bucket>
            <bucket>&quot;Cluster 7&quot;</bucket>
            <bucket>&quot;Cluster 8&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='cluster-tableau' name='federated.12jmbcg1tna1v91ghi6f20uw6dcs' />
          </datasources>
          <datasource-dependencies datasource='federated.12jmbcg1tna1v91ghi6f20uw6dcs'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
              <statistical-model class='cluster-k-means'>
                <model-specification>
                  <analysis-fields>
                    <column name='[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[sum:CTA:qk]' />
                    <column name='[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[sum:Demo-Age:qk]' />
                  </analysis-fields>
                </model-specification>
                <model-summary num-desired-clusters='8' />
              </statistical-model>
            </column>
            <column datatype='integer' name='[CTA]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Demo-Age]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CTA]' derivation='Sum' name='[sum:CTA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demo-Age]' derivation='Sum' name='[sum:Demo-Age:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[none:AdhocCluster:2:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[sum:Demo-Age:qk]</rows>
        <cols>[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[sum:CTA:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[none:AdhocCluster:2:ok]' type='color' />
            <card param='[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[none:AdhocCluster:2:ok]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[none:AdhocCluster:1:ok]</field>
            <field>[federated.12jmbcg1tna1v91ghi6f20uw6dcs].[none:AdhocCluster:2:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOy9d3gd13Xu/ZuZ0yuAgw4QlURlBYvYRVIsIiVRVO/NNS6x02/y3S/tOsXJ
      58S5jmPZsizLVrNkSVYXRZGixCb2ArCAJArRez39nCnfH2AbHEDgAUiBTvQ+jx6R3HvW7Jmz
      1+y1V3m3oGmaxhf4Av8DIQiCIE72IL7AF5hMfKEAX+B/NK6pAsiyPKHrNU0jGo1OSIaqqhMe
      h6IoKIoyIRmyLHM9WJsTfZ//3WR8sQJ8jrgeFOAL6PGFAnyB/9H4QgG+wP9ofKEAX+B/NAzj
      vlLTqDtzgpbOXmzudDzmIHUdQZYuuQGTJFzFIX6BL3DtMP4VQBDIn1bGjKJswtEgtc0DzCtO
      5Niptqs4vC/wBa4txr8CAIIocPx4LRVLF3Jw/1nsLjdKY/Ci21FRFFRVndAAVVWdsPdEVdUJ
      jePC/SfiClVVFVGcfItTUZQJv8//TjImpACB3lYMCVOwmR3gb2LzlkZmLl+HwXBJ7OV/jhea
      piHLMkajcdwyLkz+iYzjwsSXJGncMmRZRhTFSVeCaDQ6off5302GcLVygTRVRVE1DIZLk0SW
      5clTAE1D7urCt2MngtWKc9VKRKs1XhG0dA+y/XA9yQk2VlXkYzaO73kmWwE0TePTczupbDnK
      9MyZLM5fjjgsE6Yv0MuO2u1IgsjyqatwWdwjyrpeJu9EZVzVXCBBFHWTf7Kh+P30/vJZjDk5
      YDLR9+yv0eKMCHf2+Xj2/aOU5iYTjsg890Elqvr7Gcz6pPYj9tTvpDx9Bgca97LtzAe69rAc
      5pl9PyXVkUaCLZFn9z1FRIlM0mg/P0y+UXqNEK6uxlxUhHXeXOwrV6CFwyi9vTH9oq2tBA8f
      RvX7Y9qO1rQztzgTu8XI3KIM2np8BMITD79PBnbXfcymGfewMHcpm2bcy576nbr2c711pDrS
      WJS/lKUFK7CZ7LT2N8d9n6gSpar1KDVdZ34vIt8T2gNczzBmZBDYtRtlYAAlGEQNhxAdDl0f
      /67deDdvxpCSwuAbb+H59jcxpKZebE/3OPnBb/YwqzCN9l4fJoOE6Tpa5eJBTmIeJ9orcZnd
      nGyvYkpCjq49xZFKh7ed3kAPqqbSF+wl0ZYU1z0icpgf7fgBACE5yLSUEu6Z/WCMqXU94b+t
      AhgyM7HOn0ffT38GBgPue+5GtNl0fQbfepvk734HY1Ym3vc34/1wK4kPPXip3R+iMDORfl+I
      RIeFYERGUVVArwSqqqGhIQoCghAbA9E0DVXVmMz97x0z7+OZfT/l47NbyU3K50sL/0DXnmTz
      sKpoLU9/+hMEQWBD6Ubc1oQYOZqmoWpDnrnhz3q05RBWo41vLP0uiqrwN+/9BSum3kSaM+Oa
      PttE8N9WAQRBwL5kCdZFi0b3AgkCaEPuUU1VY35QQRAIhKIM+MPYLEasplgZZ5p6+Pk7hxn0
      h1k2M4f7VpVjvGyViMoKb+ysprKuA7fdwkNrZpLhccTIudZwmB18Z/mffebGsSJ7PhXZ80eV
      MRDq5+XDz9Pl7SQnKY975zyE2WC+2C4IIhrDzZ7rOyh6/a5NnwPcd9xOz5M/pesH/0bw4EEc
      a9fo2gWgpdtLTpoLNA1vUL8pjEQVfv7OYZ5YP5t/+YPVtPf6+PSE3m7ef6qFcFThz+9fxC0L
      p/Hi1srfC9t4JLxV9RoV2fP5w2V/RpozPWYjPSurAlmN8q/bvsc/ffg3zM+5gRRH6ijSrg/8
      3q4AmqIQ+PRTwqfPYK2Yg3X27KEvehywLVyIMS8fubMT89TCGBOptcfHbYuLqChKx2oy8P0X
      9xCJKljNQ1/QqKLiD0bIS0/AZjEyNSuJ5q5BnYzmLi9FUzzYzEZy0twM+MLjet7ugQCb99WQ
      mexk+axcDNLn/+3q9HVwa/kdWI1WStLK2HzqHV27UTJy18z7eWrPj0m0JbG25Nbr2v6H3+MV
      wLd1G9HGJuw33khg336CR46OS44xPQ3rzBkxkx9gYVk2h063UdvSx5aDdRRNScJhM11st5oM
      lOel8MLWKrYcqGXP8SYWT58yTEYWWw/VcfB0K6/vOMXMwrS4xxiKyPz0zYMU5yTT1uPlnU/P
      xP+gVwHzcxbxu8pXONZymDerXmVpwQpduzc0yIuHfsX9FY+wOH8Zz+7/GVHl+vaa/d4qQKiy
      Euf69ZinFuLcsIHA/v0xfbRolODBQ0Sqq0c1O+TubkJVx1FDoZi27BQn37xjHk1dgyS5rHz1
      trlIl+1kRVHgS7fMIT3Rzrn2fr6+cS65afrgUU6amwdXz6CutZ/8jERuX1o84kb5s9DQ3k9a
      ooP5JZncsqiIqtqOmD6qqnGspp0D1a3IysTST0bD0vzlVEyZT11vDWtLbqE0rVzXfqazmmkp
      xRgkI5nubFRVpS8Q63q+nvB7awIZs7MJVlVinT2b4KFDmKdO1bWroRDdP/h3BKcD1ecnfOgw
      CY88jHDZBA7sP4D/k08wZmcz+O57JH31yxg8novtgiCQn5HIlzfMBkZOhbCajdy6pHio/wjj
      FASBvPQEspMd444EpyU5aO/10tbj5WxzL1kpLl27oqo8+cZB+rwhTEaJzftq+KuHl151M0kU
      JWZnzaU8deaIG+lMdxY/2fUfNPY1MBDqIxgN4jA7r+oYrjau2xVA0zS0SGTovxG+3q6NtxGt
      O0f3v/8QFAX7jct17cHDR5A8SXi+/S08f/YnhE5VI3d06vr4t39M4uOP4bpjE/Ybl+HfuWtc
      YxW4tr6OBIeFTctKeertw5xq6ObuFWW69ob2AZq7Bvl/Hl7Kn9+/GKNB5FhNe9z30TSNsBwm
      Io/8zsdCb6CXaSnFKKpMojUJp9lFKBqMW87niet2BQjs3o1/1240VcO5ZjW2+fN07Wo4guL1
      IlgsKP39aIqCcNlXSTCZ0CIR0DQ0RQFVRRj2Bdc0jd5nfgmqBoqCZc7sz+XZxoN+35CJ5g2E
      CUdksF1yPxokEUXVUDQNCYjICiZj/AG7PfU72FX/CQCrpq1lfs7CuK43SkbSXRk8vuCrKJrK
      D7f/86Qn/42F61IB5K4uAvsO4PnDbyNHIgw+/QvMhYVISYkX+wy+8Qb2G5djKSnGv2cPvi1b
      cG3ceLHdOmsmwX376PyHf0SLRLEvX4aUkqy7jyBJKAMDGFJSiDQ2IJrNXI/o6vezs7KBP71v
      EfVtfbyy/QTfumPBxfbsVBcV09L53z//CEkUyEl1U54Xn/uxy9fJ/sZP+fayP0XTVH625z8p
      TC4iKY5o8NTkIg427uW/dv2QsBzmhrwluC2xwbTrCdelAih9fQiSyMArv0UTBBBFlMFBnQIo
      PT1EamsJ7NyJITMDpatbJ0MwGLCvWknPfz2JlJiAbdHCmM2nFo3i+dY30GQZuaOTSG3t5/J8
      8aLPG8LjsuGwmshOcdHn1W/YRUFg7YJCTjf1EAzL3LakCFGMzyjrC/TisSVjN9kBcFncDIYG
      dAogqzI7aj7iZPtx5ucuZEHuIoTLjD9JlHhg7mN0DLZhNJjw2JJj3nlEibDt9AfU9dSwrHAF
      MzJn62RoaNR117D19GY8jhRuKduI1RjrobtauC7XJ0N6+pBnJhBE7uklUlePYdjXW/Ik49+x
      Eyk1Fd+WrRin6N2P0Y4O+n79HIlPPIZt5Up6fvRj1KDeHrXOrcC7+QOijU34t3+MbfHia/5s
      40FBZiLeQJh39pzhhQ+rWDJD/6xDbtJDbFpWwuPrZ/P0O4fxBePL5CzwFNIX7GVL9bu8d/It
      okqU7AT9fT449S59wV5uK7uDE22VHGjYGyNHFEQy3Fkk21NG9Ha9fuxlEOCW0k3sqvuEk23H
      de2t/c38rvIV1pfdRpY7m1/tfxpFnRgn02fhulQAubUV64L5WEqLsc6Zjbm0FLlTv4FVurtJ
      uO9eRKuVhIceJNLQoGsPnzyFKT8f1R9AcjrR5Chyd4+uj+OmVRjS0vB9+CGujbdiys666s+i
      aeALRth/qpWmzsFxbS4NksgfbJyH2WRg+axcls/K1bV39Plw2kzMnppOaW4yBZlJ1LX2DRuH
      Ro+/m4NN++j2dcaMwyAZ+fLCb2CUTNhNdh5f8FUMot5AONVxgpumrSPTnc2a4vUcaTkY97PU
      99SyvGAlWe5slheupKpNH7+p7jzJ3CkLyEnMY37OQrzhQYLXcCN9XSqAITMTpa8PU1Exhrxc
      VL8fQ4repjXm56F4vdiXLCba2oq5pETfPmUK/u0f49vyIf3PPY8yMIDk1rsPA/v2EzlzBsus
      WQy88SbyMDPqaqBnIMAPX9lLY+cAr2w/wfYj58alBA6biTXzCphZmKaLRQAku20M+MLUt/XR
      0jXIufZ+cobFI+p763j605/QNtjCM/t+xtmu07H3MDtZOW0NN069Cdt5U+hy5CXlc7BpH/3B
      PvY27KY4tSymz1jIcGVS2XqEvkAvh5r2My2lWNee7ynkeFslPf5uznRWYzaYsRiu3d7sqlWE
      jYSJVISFz5zFu3kzGgLujbdiysvTtavBIINvv0O0oQFzeTnOdWt1Xp4Lqc6I4pCnqLuHlD/7
      U4yZlzITO7//r3j+4GtICQkEDhwg2tSM+847YsYykZLI3+08hcdlY3F5Fv6QzA9/u5e/ffzG
      uINhY6GhvZ/Xd5xCVjQ2LJpGeV6Krv2nu3/EhrLbyXBk0ulv542qV/nWsj+O6x7BaJB3T7xB
      fU8t5RkzWVdyC5IY3zvxhr28XfUaLQPNzM9ZyLLClToZqqZyuOkAO2o/wmVxc+fMe0myJ48o
      62pUhE14E6zIMoJkQNBiSyInAnPRNEzTpo5aEilarSTce8+o14s2G1KSB893vo0SDtP999/T
      uUlhaKPs3fLh0KbbZMKYnn5Vxn45bGYjR8+2s+NYAykJtpivNwzl+bzwYSXeQITblhQzsyAt
      3rQmXHYzSS4rEVkl0WmJabcarXx6bie9/h48dg8WY3zloRdk3D37AaLRCEajaewLRoDT7OTB
      eY+dn7yxMkRBZF7ODczLueDlurbZpBMwgTQaTx9j246dnK5vZueH77Dl/Xdp6r0+Ah+WWTOR
      nA46/vpv6fq7/4NjzWqkZI+uj5SUSGDfPqJNzYSOHsOQcfXz1hMcFo6cbaOtx8uh020x0dlg
      OMr3X9hFXnoCy2bm8vO3D1Hf1jeKtJERPp8rND0/lUXl2Tz11iH8If0mONOdzd5zu2kdaGbv
      ud1kuDIn8FQTnZRXEjq81uHFIUygYh1qqmvRLC7CgX6w57DuxgwOVrWR4RqqNpoQLYqiINfW
      oQLa1ELGU01iv/8+xJ27EJxOzAvmx7AJR1pbcT38MEprK4LTSfDECaSy0hg5E6FFOXK2jXtW
      lFKel4ymwT+9sEc3js5eH33eIOsXFABwor6Do2fbyE6OtcFHQ3PnIFazgRn5Q6ZCbpqL0w1d
      TM+/ZAadaKviO0v/HBERBI3Xql5m9dSb436ehv566rtrKU2fTppjfCtmp7+D1v5milNLR3Rx
      RpUIZ7qrcVsSyHbnjCBhCJNLiyJAYlIy+RXzOPjpLjTNhL/XjGBLmDAtiqYo9D77KwSzGTUS
      IXroMAmPPKTL4xlTRiRCzzPPInk8RBsboaMD15136GRINhve51/AXFpK4I03SXz0YUym2GV5
      InuA0twU9p1soTwvlZrWoTweo9F4cQ+Q5LZjNho4VteNy26mprWP5bPyRhzHaEj3uPAGorT1
      BjAaJJo6vWxaVqaTUZxayvHOYyyaspQDLXuZllIU1z0AdtZt553jvyMnIZ8PzrzLVxd9k5Jh
      CXFjYe+53Xx6bhfZril8XLeVJ274uq5mwBf28tTeHzMlMZcuXycFnqmsK7llxD3T1WCWmMAe
      QGDa9GIO799L3rSZGILtHDjbz9KlJWNfCmiyjBoKIVosCMOUJNrQgCAIJD7yMLIsM/jzp5Fb
      WzFmZ+v6qeEwWjCIaLfH2Pfh6moMKck4brsVDej/2c9R+vp0yW5aKISpuAiltxdrxZxxe4HC
      EZmIrGC3mhCH/VBLZuTQPRDke8/tJC89gW/cPk/3YzptZv7onoU8/c5hAuEoty4qomzYBnYs
      2K0mHl47g+e2VBKVVe66sTRmH7C6+GberPotP9r1A8ozZrBpxuj7p9Hw3om3eGT+l8lyTqGy
      /QjvnXwrbgXYUfsRX1v8bewGB0fbDrGr7mPumHnvxfajLYcoSStnfeltRJUI//HJv7K8cOWI
      XqmrgQltgh2JaSxfeSG/PZ28K5v7qD4/vc8+ixYIIFisJD7+KJLrkotSMJuH0pM1DU1VUcMR
      hGFfq2hrK70/+zmq34+Ukoznm99Acl7KPBQsFoKVlUQaG9FUFcLhGEUTTGbct28cigVs/xht
      hJTosVDT0stvth1H06AgM4F7V07HaLi0yqiqxmAgRE6qC0GAYCSWmqVoiod//caamH+PBx19
      fhRVQxIFWnu8MXUHETlMh7cdu8lBl7eDsBzSlTNeCUwGE68efQmr0c5guJ8sd/bYFw2DQTQQ
      lsPYDQ78YV/MZtxisNIWaQWGIs+apiEK146IYFJSIQbfegvbwoVYZ88iVHWcwTffIvGRhy8N
      KjMTU24u3f/xf1EVBdvs2Ugp+q9i/wsv4bz1FqyzZuLbuo3B371B4qOPXGwXDEa0QBA8HrRI
      FGQlZh/h2rSR3md/hWizI4giiU88FtdzRGWF32w7ztdum0uSy8pLW6s4fKaVG8ouTYzdxxtx
      2cz8xQOL6egL8OLWKv7ywSVX1Q3a6w2y9WAdf37/YkRR4Eev7WNmQRqZyZc+CG8df52FeUsp
      S53B6e6TvFn1Go/M/1Jc90lzpHOy4zgmaZCoEmF21ty4x3r7jLv41f6fYzVYMUgGHlvwVV37
      zMw5nGiv5Mc7/51gNMC60lviVtR4MCkKIPf0YM/KQjAYhvJ4duzQtQuCgPO2W7F19yCrCubU
      1JgJo/T3YUxPQzCZMGRlEjpVHdNuW7YU27JlYJAYeO75oS/8ZauEeepUkr/9LZTBQQwpKTEr
      xFhQVA1F1XA7zBgkkcxkFz0Dei9Yd3+AKaluDJKIx2UleA14hfzBCA6rCat5aPzJbhu93qBO
      AXoC3WS5szGIBjJdWeyo+ShGTutAC++dfANRkLh1+h2kOvSrSDAaZFZmBcfbjjF3ygL6g/F5
      qwAKk4v41tI/ptfXQ0ZCJgZJb7qaDCYemfclOn2dWI3WEZkpriYmRQEcq2+i/8WXsM6tIHjk
      CM7VN8X0EQQBKdmDJssjfi0dN91E33PPY5k+neDBQ7iHxQTMZWX4tm0n5HAgDw5iSEpC8nhi
      5Ih2O6J9fPal2ShRnpfC81sqmZLqZu/JZr61Sc+qsHRmDk+/c4QBX5C6tn5uKL366RaZyU5M
      BonffnwSk1Gis89PSY4+eLS6aB0vHv41szMqqGo/yqppa3Xt/rCPXx94mntmP4iiyjy77yn+
      cPmf6rw0Hnsyla1HWZS3jJ1127l1emzQ8EpgNzswieaYyX8BoiiR7vp8qFQmJRKsaRrBffvx
      vv8+jnVrsS1aNCqfzmiBME1VCVVVEampxTJjBuZpU/VF8ee5QXt/9Wskj4fEB+6Pmxv0Aj7L
      CyQrKpW1HXT2+ZlfmkmS06p7Fk3TONvcyy/fP8L8kixuW1yko02BoYquk+e68AUizJqajtVs
      jDsQForIHDzdSlRWmV+SicOq3zNpmkZDXz3V7ScoTisjL6lAN87qjpMcbNzLw+fNol/sfZJV
      09aS7ym82OcHH/0jK6etocvbQaLdw9HmQ3x9yR/GN9DzuF64QSdlBYjU1OL7ZAfWBQsI7N6D
      lJSEpeQKd9DnIYgi1lmzsM6aNWK7GonQ98KLmAoKUAYHGXzjTdz33RuXK/VKYJBEKopG/1p1
      9Qd4+aMTzC/OpKG9n4+PnmP13EuTT9U0XvnoBL5ghASHlY+PNvDde27AZo7vh7WYDCydMbrP
      XBAE8pIKyHJOGXHSZLmzeXOgmca+cyiqQo+/m1Sn3s9f4JlKl6+TOVnz2V67hbL06XGN8XrE
      pCTD+bZsIfGhB3DdsoGEhx7E9+HWmD6apqEODqJ6vaMGO9RwGLm3F22E4zLDp05hzMzEdccm
      3A8/RLStbURu0GuNXVWNrKzIY+OSIr58yxx2VTbp2gd8IWpb+/jKrRXcvaKUwqxEKkcoeh8L
      mqYx6A/T7wuNKzjktLi4d85DvHPiDT6ofpcH5z52sTbgAm4pv52QHOT5Q8/gsaewJH95jBxN
      U+kP9uELj/67+cJeOr3t1wVjxKSsAKLDgdLfjzE7G2VgYEQb3LflQ4JHjqApKvZlS3EsX6Zr
      lzu76PvVr0AQEUxGkr7yZR21iehwoAwMXiyJ1EZwpX4ecFhN9HmHNsbBsKxzkQIYJYmorCAr
      KgZJpN8biklkuxLsqmxk2+F6RFFg9tR0Ni4pHvuiYcj3FPLNpd89/7dYG8xssLBpxj2j5gKp
      mspbx1/nbFc1siKzrvSWGKa5M52n+OW+p1A1lVRnGl9f/B0c5s+fKe8CJmUPoAwO0vvzp4ds
      dlUl6StfRkq4tNuPtrUx8PIreL79LaLRKAP/9SSJjz+KIfnSxq7npz/DsWY1poICggcOEGlo
      IOGeSxthTVUZfONNwjU1aJEozpvXYZ1bMS7340QiweGIzDPvHaXXG0BWNB5eM4OCzMSL49A0
      jSNn23ljVzUmg0RBZiL3rSofMWluNPQMBHjyzYP8rweXIIoCP3xlL/etKmdKaiy//7W0vWu7
      z7LtzAd8ZdE3UVSFf9v+T3xz6R/pzhn46/f+nCdu+DrZzhzeqf4dmqZx16z7r+o4rhSTtgeQ
      XC6S//DbKINeRJcTcdiXWfX7EV0ukCQEVUW021EDeveiGggguVxD3qIkD2qVvrJIEEVcm25H
      7u9HE0WMbvdVT0G+EphNBr52WwVd/T6cNgv2YZtTQRCYMy2dadlJFzM5h0eTx0IwImOzGC8m
      2iU4LHgD+mQ4RVX48PT7nGirojS9jLXFG2K8MOd663j/5NuIositZZvIGlYRFogGeO3obzjb
      dZo52XPZOP0uXSqzN+wl0ZqIgIBBNGAxWIjI+nGEokGcZieCIJBk9XCut07XrmkaVW3H2H52
      C4nWJG6fcXeMK7TH383Lh5+jw9vBmpL1LM5fNm4GukkriBFMJgzJnpjJD2DKz0cLBhl49TUG
      f/sqgtGAMUufvehYsYK+51/A+/5mBl57DcdIrlRRREpIQHQ4JmXyX4AkiSS7bRf99MMhCAJO
      mxmPyxr35AfI8DhwWE38+oNKXv7oBP2+EMVT9C7f7Wc/xBfx8VDF40SUCB+e3qxr94a9vHz4
      eTaUbWRN8XpeOPQsgYj+zIRXDj+P2WDmsXlfodPXwQfV7+raS9PKaRlo5s3jr/HCoWdJc2aQ
      ZNePY+W0tfxi70959dhLbDv7ASun6SPgDX3n+OjsFh6oeJRZWRU8d/AXyOql6Lmsyjy158eU
      Z8zk4blPsKP2I6paj8X9zi7guqwIEySJxC9/CVN+PubiIhIffSSG0sQyZzbuu+5CtNtJevxx
      TDnDPCCahuL1Eti5i9DhwyNulD8PaNoQq8OHB+s4ca7rPL26HrKssv9UC9sO1zPoDzOSURoI
      RdlV2cjppp6YU2okUeTx9bOZnp9KXkYC37pjPtKwtOuT7VUsL1yJx57M0oIVnO48qWtv6W8i
      y51NblI+BZ6peOzJdHj13EI13adZWnAjOYl5LM2/kZPtVbp2k2TiwbmPU9t1hqgSZdPMe2K+
      zGuK1zMtpZhDzfu4Z/ZD5CTm6dpru89Q4JnKifYqFFUhEAkQil5KUYnIEbr9XSzIXUReUgFz
      subFPEs8uC4VAEC0WLDOrcA8a9aIm1dBEDDlTMG+fBmGtNQYYlw1HKb3Z0+h+HxEauvof+k3
      QzlBnzPae3389M1DAOw41sAH+2t13hFV1XhhaxWnG3sIhqL85+v7CISHmS+Kys/eOkR7r4/3
      Pj3D7uN6TxKAySAxtziDhWXZF8l7L8f0zFl8dGYLXb5OPj77IWXpM3TtUxJyaB5ooq77LGe6
      qunxd5M+jNe/KLWM7We3UtdTw8c125iRqedRiihhnjv4DGUZM7Cb7bx69CVUTf/Od9V9TI+/
      m3Ult/JB9Tu0DbYOG0curx97mZaBJt4+8TtCckhXEmkymEh1prG77hNqus9wqGnfhNyxk6YA
      ajhMtK19RE7Oq4HwyZOY8vJwrr8Z1z13I/f0oPT0jH3hODDoD9PW4x3x676rqpHV8wpYM6+A
      R9fNYu9JPX16vy9Ec9cgD6+dwS2LplGSk8yxGr0btK6tD6vZwF03lvLYzbPZcfRc3GNcMXU1
      qY40Xjn6PG5rIjcVrdO1280OHpn/Zbad2cLO2u08tuCrWE36XP375jyMQTLw8tHnyPcUsKZ4
      va79ZPtxcpPyuLnkVu6Z9SA9gW56/PoM230Ne3ig4lFWFK5mTfF6dp8n4rqA1sFmlhQspz/Q
      R4Fn6lDynHKJUdsgGviDxd+hvreOVytfYm3JLZSnz4z7fVyUN+4rJwClr4/ep59BMJvRwiES
      n3gCQ3JsmsJEICUkIncdQItGh+gVQ2EES2yp4ESgaRpVdZ28sbMaq8WI02riiQ2zdSdJelzW
      IeVQUun3hrCa9F9ns1EiIisEwlFMBomOPn8MqZXLZqbfFyIcVejq9+O0xZ8cJgoiq4rWsix/
      xajljFnubL66+Jvn/zaSG9TMfXMeHtUNmmBNpNvXhaxGkRWZcDSExaB/5zajjb5gL6m2dNoH
      20iy6X/3RGsSNqONJ274+lBtwJ4fYxD178xtTeCri745alllPJgUN2jvL5/FdsMCLGVlhE+f
      xr9zN0lfic1MnMgxqZqq4n3vfULHT6ApCq7zmaPjwWhu0Iis8P3nd/Hdexbitpv57fYTpHsc
      LJt5ibYkElV4fkslzd2DiILAI2tnkpuu92pU1XXw2ienEEWB8rxU7lhWEkNs9be3YZYAACAA
      SURBVNHhenZWNmI2SjyxfjZpSePznV9LN6imqbx36m1OtFWiaiobyjYyM3OOrk/LQDMvH34O
      WZFJdaXzQMWjumxPWZV5o/K31PfUoqFyx8z7YpgjrtazTJobVAtdOrBOtNvRwlffDBJEEect
      G7DduBxNEDCMM+Hts6CpQwcCmc4Htxw2M8GwPt/fZJR4fP1s+n0BbBYTFlPsD5aaYMdiMuAL
      RshNc4+YB7RyTh43lGZhNF6/B/UJgsiG0o3cWLgKSZSwGGJzr7Lc2Xx72Z/iC3lx2xJiWCUM
      ooE7Z92HP+LDKJqwGK/uqj0ck6IAznXr6H/hRcwlJYRPn8Z9153X5D6CIAzFEEY4/+tqwGSU
      WFCSyZNvHiTT46SmpZc/vHNBTD9RFHDZzCMSxYajMk+/c5j7bpqO02bmmfeOkO5xkD2MAl0Q
      hJgYwvUIQRDGpEQ3GUw4za5RKVVEQcRpdo3YdrVx1RRA07Sh6p0riGAa8/NwrFx5MRvUNIzb
      /4rup6qEq6uJ1NZhKS/HlJ8Xkw2q9A/g37cPwWrFvvCGq05+KwgCN98wlZLcZLr6A9y+tBjL
      CAfpfRa8gQiiKDI1a4iDszQ3mfq2vhgF8AbCfHqimfQkB+X5qUhxcn9eL1BUheNtx2joqaci
      ZwFZCdk6btDPGxPyAjXVnuTDbds509DGwV1bef/9zfQExj6NPXz8OIF9+3DcfDPBQ4cJHY0/
      kBHYu3eIGzQ5mYE33iB8tkbXroZC9Pz85wgmI3JvL/0vvDhEk36VceEQjQWlWefTmOP7Md12
      MwZJYP+pFs4291JZ0xGTyx9VFH765iGissKOYw18Mg4v0PWCbWc+4EjLIZJsHl4+8hzNfY2T
      Op4JrQCDfT1YrDbcdmgjiXUrMzl4oomEiqGglKqqyHKsQng/2o7z7rswpKVhyMtl8DcvY5wx
      si93NBn+3Xtw3XsvgqZhX38z3u3bkQryL7aHqo5jLCjAsmwZmqbR/+OfEOnqQkrWTy7N50Md
      GEBKS4NRKsIuULtMxF9wgcJjOE2MAHz9tgpe23EKbyDCg6vLSXSYdc9c09KL02Zk3fwC+n0h
      nnzzEMtnTmE8UBRlwubgRGQcatrPN5f8EWbRgt3sYHf9Du52PvC5j+MCJqAAGoVlFWSHfRw8
      eALRYEEOh8BouDgoQRBGNImM6enI5xowejzIDY0YUlNH7HfhMOaR2iSHg74nf4oxM4NIUxO2
      hQt1/YypKQT37YdwGDUUhnAYyW7X9QlXVzP41jtIbjdqJEzSE4/HnCY/1jiuFKqqIoriyNVt
      NjOP3Tz64Rwel43ewSCBsExLt5ckl3XcY5noc0xUhsviosPXTqYji8b+c6Q7Myb3WcbvBtU4
      d+YUdc3tpGQVIHibaeoOsXTVSpymoc3NaG5QNRCg79fPo/T1ISW4SXjkYaRRJt5obtDuH/0Y
      LRQaMmtEEdOUbBIefEB3rW/rNoIHDw7xi27aiKVUT3rV9YN/I/HRRzGkpuD7ZAeqz4frlg0x
      95pINugFyLI87jPCYCigtu1QPQ6ricfWzSI5YXyc+ZNdidU+2MYrR57HH/GTl1TAXbPux2QY
      3+Z+kt2gAnlFpeROK0UQBDQtl/IhoWNeKdpsJH3tK2jRKILBEJPnAxCqqsL7wYdoArhvvRVz
      cZG+g6aS8OADSCnJRGpqCR6MpeqW3G40RUUwm0au+1XUi2aPaDKhTFK+UHPnIC9tO044KrNy
      Th6Lp0+JeY9Lpk9hQUkWkijE5PkANPX38Ul9LYqmsXBKLsXD2LSjisK22jM0D/ST6XJzU2ER
      5jhJAILRCNtqz9LuHSQv0cOKgqkYLlNoTdM40dnOwZYmjKLIqsIiMpz6zXy6K4NvLftjguEg
      Not90s8RnuDdBZ25E489Jogiotk84uRX+vsZfG8zCY8+jPPeexl4400Ur1fXx7FmDX3PP8/g
      679j8M03cazTF3nL7R34d+4i6Q++hvPee+h/6eWYAzLsq1bS94tf0PfiS/h27MC+TF9083kg
      FJH55ftHuW9VOd/YNJ/dx5to6hyM6ScIAiajNOLkD0QjbK09w7qiEjaWlrOnsZ7BYSkmexrP
      4TSbubtsJklWG7sb6uMe68f1tWQ4XdxdNhNJFDjYot/A9gQCHG5p5o6yGayZWszmM6cIjbB/
      k0QDZoNl0ic/TFIcQNM0widOEDp5CnNJCZYZ03XKI7e3Y8zMwJCSArKMISkRpbtHR3xlKSvF
      mJlBtKkZ18bbYr7w0eZmTAX5SElJCAkJiBYzqterK4y3zZ+HKT8Pub0d9513IF7lVImhZ4XK
      2nY+OXqOKWlubl4wTZcW7Q9GMEjCRT7/oikeGjpi+f0/C4OhECbJwJnuLmRVwWky0+n34brs
      eZoH+ilJSWVvcwMpDictPfGz4HX6vCzJzccqSpSmpLHzXB0LL9uLd/i8WI1GttfVYDm/ugQi
      kYt/vh4xKSoYOnIE/46dmIumEdizh+CBA7p2Y14e0bY2goePEDxwEMXrxZAZW3guJSRgmTF9
      RPPGXFxE+PRpQlXHCez5FCQJKTExpp8hORnL9OnXZPLDUJrDs5uPkZvupr61n6ffPazzJrkd
      FqxmIx8fPUdlbQeVtR1xUyMmWKy0DPRT29tNp8/HsfZW0h36YFS6w8mWs0OHYmytOUOKPf5U
      iqLkVHadq6NpoJ+d5+qYka7/TZJsNg61NNEbCHC6q4tOnw+L8fqd/DBJCuDfuRvXXXdinT0b
      9113Dk3QywdlsZD0pSeI1NSgNDWT9KUnRgxiqYNtyOd2oY5A0CQ5nSQ+9ijh48dRu7tJeuLx
      GP7QzwO7qxpZMTuPWxZO45F1M9l3skXXbpBEvr5xLt39AQ6daeNL6+eQ5IyPvmUgFCLd6cIo
      SvgjEcpS0+nw6U3GDp+XG/MLCUajLM0roNvvi5GjahrtXi+dvpEL2hdk55DpdHOsvZUZ6ZkU
      p+iJs8719TLVk0K608mM9Ay082MbDm84RNNAP9FrEJeJF5OinsbsbMKnqpFcLsLVpzFkxnLV
      G5KTcd97D7IsI40wceXGTwnv/CGiKxN1z4+x3PxPSEkFlzoIAsaMDNwP3D/kgpykZTgrxcXZ
      5h66BzKobe0n2R07ua1mI3edP/x6PF5tu8lE13mTxyhK1PZ0s26anmYmzeHEJEmsLiyipq+H
      lGFeN1XT+OBMNYPhEKqmkepwsKpgms40lUSR2ZlZlKekjuh9SbE7CMlRbsjOJaTIHGxpwjas
      39nuLnY31OMymdnddI5NZTNxTuLxtJOTC7ThZvpf+g2BXbsxpKeT8ED8RdGRfU9hWflXSJmz
      iVa/R+TAL7Cu+8drMNqJYe28Qpo6B/izJ7eS7LLxrTsXjOgsmEg4J6Io2E0mDIKIoqkk2mwE
      Zb1Ha2leAe+fOcXhlmZSHA5uLtK7hDt8XrzhEPfMGIpH/ObYYboD/rhMpYIkD6Wpafxk326M
      kshtJdNxW/QKv7uxnk1lM7AbDBzv6uBwaxM35sefCnO1MDm0KFYriU88fvHv44/mnT9F5Drw
      JowGi9nANzfN56u3zsEgSSPGAerb+nhx63GissLyWbmsmJMXV22whobDbOaBmUOsF787URlj
      wpgNBm4vnX7Rdx7zzrUhL86zh/YjCBAeKfoeCfPB2dN0+3xkJySwZmoxxsu8eKIgsKpgGqsK
      pn3WYC9iyH1+xY95TTBpO5SJhrBN879CaPs/ISZMQR1oxrLun67SyK4+BEEYdUIHw1Ge21LJ
      126bi81s5Ol3D5OXkUBBRuyGfTQkWW1kOd28UnUUgyhiNhjIdMV6kS64qkd691ajkd5ggEyX
      C0XVGAyHY7w32+tqmOZJZk3+VI51trOvuYGluQW6PmP9roty8njjZBVusxlvJMId5TM+s/+1
      xvW9Rf8MSDk3YOi+mWjVa5gXfgPJUzD2RdchAqEoBkkk/XyBS0FGIq1d3rgUQBAEVhRMpcvv
      Q1ZV0p2uuNkl+kNBZqRnMD87BxGBXQ11DIbDOM2XvGM9gQDL8wqxSBKFnmR2n6v7DIkjozgl
      lQyniy6fl5zEJN0KAkMLRId3kEOtzSRYLMzPzsEkXbtpev3aDmMgevw1tEAvlrXfQ278FPnc
      7ske0riQ4LDgtpt5f18N+042U1XXyfSC1LEvHAZBEEh1OMl0ucdFrZLlctMfDNLh89I82E9I
      lkkdZv+Xpaaxve4sNT3dfFxXw+zM8TFduywWctwJMZMfoDfgZ/OZakqSU5EEkfdOn0K9hnbS
      pCmAFhpAbtqPNg6OeQC5fhemiscwZFVgqniM6JktV3mEVw61vwm5+SDaOLguJUnky7dUoKoa
      9W39fPW2Ctz2EVy+mkbL4ADea1A9B0MUjZvKZtAfDOKPRNhUNj1mgs7NmkKG08W2+hpmpWdS
      6ImNV6iaSmN/Hx2juFLHQk1PN2WpaRR6kpmfnUNfMEhIvnYpKpNTFN9TQ/jjf0VMKSZy4GnM
      S/8EKTU+dmgxKR+leT9C7hLkc7uQ0uI/tXyi0DQN+dTbyLUfIbgyiRx5Aeuav0OwXHkUF4aY
      nTcsGto4jvTtVjWNd6tPEpKjeMNhlucXMtUz8uHRE4HLYmFFwegemcb+Po53tJHrTuTTpnOk
      OZ14bJeCkLKq8vrxY5gkA0E5SqbLxfK8wrj2e+kOJ/ubGylLS6c/GMQgipgmkIQ4FiZFAaKH
      n8O89I+Q0kpRus4QOfzruF2Y5nlfJrz3J0RPvoWUMRPjnIfHvmgc0DQNLRpCECUY/kMoYaKn
      38e64V8RzA4iR15Erv0IY3n8B0d81hTp8HkJylHunj6LvmCA90+filEATdNQzn9xpVE2uqqm
      EVUUJINhXGbSnoZ6NhSX4TSaaPP72NNQz22ll+o4Gvp6sZtMbCguQwOeO3KA2RnZuOOIsk9J
      SKTL7+eVyqNYjUbWF5VgiPM0+ngwOZtg0QBKBBBAiSCI8Q9DsLqxrPzLy//lqg3vAjQlQuTT
      nxA9uwXB5MB8419gyJ4Xe09NBQQ0JYwgxvf1vxJIgnCRc0gZpb75bE8Xu84NJbjNzsyiIlN/
      gF1IjvJu9Ul6AwESrVY2lJRhGwelyGsnKvFHhjbHOW79Rl0UROTLiodUTSPeyk1REJiXPYV5
      2eMr+IkXk6IApnlPDLkw7amo/k4sN/6vcUq6trWkcu3HQy7We59D87YT3vb3SPf8EuECb75k
      wjjzXoIf/G8EaxJoKqaZ9131caTYHaTaHbx07DARWWb1ND1NiC8cZk/DOe6dMRtREHjtxDHy
      EpJIuowufkd9HYVJydw81UNdfy+f1Neyvij2UPDPQlRVCEWjpDuctHm9aG69jZ+TkMDxjlZe
      rjpKRJYpT83AYZq8KO+VYFIUQHBlYShcRbTyFYzT70RI+Hy0fTi0iJ/IoV+hdlVjKL0V47Q1
      XK5Uan8DSEaie/4TweZBiwTQ5PBFBRAEAWPhSqS0crRgL6Jn6rhWs7EgCAJzMrN5u/o4+Uke
      Mofl2PsjEURBYGdDHbKiIokSfcGATgG6/T7mZmVjkiSy3Akca2sdfpsxMRgKc9f0WYiahjca
      jUmHFkWR+dk5vF19AqfZzPS09EklJb4SjOkFCofDdHR04PPFJk+NF3L1u6jdZ7Gs/R5qfxPR
      E29eNdnxIPTJv4ASxjjrfqJVrxGt3a5rlzJnI1e/h6ZEkGu3I1hcCKbY1ADRkYqUUnJNJj8M
      RWXfPFXF4px8ZFVl5zD/u9tiod07SJffR0iOcqqznbRh2aDzsnP44Gw1Jzrb2XK2moqs+M/4
      nZuVzSf1NTQN9LOroY4FU3J17b5wmHdPn2TN1GJmpGXyu5OV10XC22dhTAX48MMP+eCDD9i5
      c+fF0sCRcIEW5Uog123HVPEoUkoxpjkPo5zbMfZF1wBK82GMsx/CkLsYY9ntKHX6cai99Zjm
      fQnBloSxfBOC2QHytXFDfhbafV48NjvTklNYOCWX+j49x2l/KEim243NaCKsKMxMz6R9WDbo
      NE8yi3Py6QkEWJCdS+mwTE4Yqho73tHGyc72i7b85bhhSi4Vmdn0BAOsKphGyTAZjf195Cd6
      yEtMojwtHRDwhsO6PpqmUd/Xw4GWJvqDQSY5E2JsE8hqtdLd3Y19WEH5BZw8vA97ejH+9lM0
      9YRYcuONOEyfrVdSxizksx9iKL0VuWYbYtrkhMPFpHzk+h1I2fOG/j9FT2olpZYSaTmMcfF3
      UQdbENqPgXF8J01OBMk2Gz1+P51+H039fTFfd5fZQuvgIIlWK2bJwPHuTtYO2ycIgkBeYhJZ
      DueImZyyqvLisUMYRQlV0zjW1sq9M2brTqqRRJEZ6ZmUeFJGlJHudHKwpZHeYIBQNEr0fJLe
      5djZUMfR1haSrTY+bWrggVkVI6ZtfF4YUwGSkpLIycnBZDLR2tpKVtal6N9gZyPNfX6yzD10
      DsLyeflUnmhmwewhm34kGhAAw4x7iRx8huCWv0FKK8M070sj9vssGVcGDS3sQ0NAFWNNF/OK
      vyL88T8T2fcUhvJNGEpu0d1LSClDKlhB+KN/QLAlYl76J2iCFEuzroSHvFomB6NtzC+skKM+
      ixwCVQaTPUaG1WBkRcFUtpypJtFiZUXhVJ0cfyRMosWKzWBE1TSyXQn0B4M4R9iAjjaGut5u
      NA3umzkHNI1fHNpP00A/Oe7Yg6pHk5FosbIgO4e3Tx7HJEmsLyrBKIq6vrvP1fN4xXw8Fit7
      mhvZ23iOTWXxfwBlVSUUjSJK0oRcIWMqQE1NDStWrGDz5s3s3r2be++9Fxh6CXsP7geDnfrm
      RhwWB0aTEVWJXnzgUSkJBQOG+V+7eHN1qHNMtwsvelwKoKlEjr6I2vgpmqZirHgMQ85CXRc1
      7EfVQPAUogT6UeQowjDeTbFwNcb8VUMiRTFm8isdJ4nue3LoR0gpwbTgawgjHAB94RlGeh9y
      yyHkA08jiBJC1jxMFY/GZLhOcbm5f8Yl6pTL34kIGCWRu6fPREDgtROVGARhxPc22vs0CCIR
      WUaWZTQgqshIxCcDYFpSMtOSknV9dfcRRULRKKrJTDASwShJcf++LYMDbK09AxpkOF3cVDgt
      rjPVdOMZq0NpaSnvv/8+U6dOxWbTU3GsXL0R32AXHb0CA61VbP6ogxtWrbtIH6Jp2oi0KFeK
      C3uK8chQOk8h9J7FetsPUaNholv+CiljOsJl500FD/wM6+JvIXoKiR59Ce3sZowz7o6VNQot
      iqZEiBx8CttN/y+CI4XIpz+B5r0YCleOOKaRaFG0sJfIoWew3/oDMJgJb/8+QvcppIyRzz8e
      CUl2B2Wp6bxUeRRJFMl0ush0J4x6+PhI7zM/yUOm281Th/ahaRqlqWlkJ8Qn40qwobiMV09U
      IgoCNpOJB2dVxCVLVlW2n6vljvJZWCWJTxrqqOnrPb/niB+feecLZE7hcJj+/n4WLVp0sU0Q
      BIwmE4nJWSQmgzYtHVVlRNaC8UDpO0fk0LNoiEgLvoLo0leNaUqUaNVvUVoOYyhciaF4g/6E
      dl8HojsbwWBBEE0IRhta1K9TAC3Yh3x2C+qBJgRnOkI4zsCQqoAqI9g8CJIJMTEPbdixQmNB
      iwbBYILzZLBCwhRUbwfS6Gdvx0AQBOZn51CckoqqaiRYrXG7HwVBYENxGV1+HwICyXb7NXFh
      lqelk+ly0e/3k5GQgMUQX5mqqqmo6lD9g6CqpNgdDISCY184Cj5ztr755pt88sknqKrKhg0b
      PvOFCIJ41Sa/FhokvP2fMZbfiTjtZkIf/QPasAPbIod/jRbxY17yXZTWY8hnPtC1S9kLhsyT
      Yy8R3fdTBEcqgkP/lRCsCcj1nyAmTCF64nVET5yVSQYLUtZcwnt+ROT460TPbsFQuCouEYI9
      GTEhl8in/0W08mWU1iMYcheNfeFwOYKA22Il0WYb98QVBYE0h5NUh2NcqRJXikSrjWx3/JMf
      wChK5Ccm8cHZag62NFPZ1jrurz+MoQAbNmxg7dq1uN1u3nvvvQlsRuOD0lODmDAFLdiPoIQQ
      bEmo/fqgi9J6BCljNkp7FYb8ZcgN+nRowWjFsub/IBgsiMnTMC/946F8nsugBQcwTF2N3HII
      09zHUbtOxzVOQRAwzX0cQ84iUCJYVv8toiO+VGZBEDEv+Q5iaglIRixr/n7EWMPngWA0wr6m
      Bg40N16zDExN02gdHKCyow1vOBTjBtWAYDRKZXsr5/p6Y1KhBUFgeX4hRZ4UVE3lzukzcVnG
      75m7ImrErVu3snr16riFj0aNOBZUfzf+X29CmrIANRKE3hrsD/1WZ76Etg3VARgKViCf3oxp
      7mOY5j4WK+v8hm2kcQTf+WPU3nNIOQuJnnoby4q/xFh6a0y/64Ea8WphNDrBiKLwi4N7cZst
      qJpGWJF5dM78EXP2J0JJeLi1mdNdnaTbHZwb6GNj6XRdRqk/EuHV40fJTUiiNxDAY7eNmlF6
      NagRx/w1BgYGiEajdHZ2jvtG8ULztiFlzByyq62JiJ5CVH+Xvo+/G0PBCrSBFgxFN6MOxJ6c
      OOZ9wj6kKQvQvK0Yi9aNS8Z/F9T0dGEQRe6fVcGDs+cSjEZp7B9frcZn4WhrC7eVlLM0N58b
      puRypFV/aGB1VwdTPSncmF/IbaXl1PX0jMgud7VwRZHgvLw8tm3bNiJN+bWAYHYiGG1Y1v0D
      xlV/DZL5UgLaBZgdGEtuwbrxP5Cy546Qg68hN+4l9MY3iGz+C9T+2MktGG0gh9GiQbRoIO48
      /iuDRvTMB4Tf/CaRXf+OFvaOfck4MBgK8dap47x+opKuETh/NE3jUEsTrxw/xoHmxhjTwmIw
      EpJlFFUlqihEFSVu7tArgVEUL5pX3nA4JiPVZjRdLPqRVRUVDWnY1z8sy2ytOc2rJyo519c7
      oWjymCZQdXU1DoeD3t5eZsyYEdcGa7wmkKZpKPWfoA62oSgKxuQCpJxFunur3nbk2u0gioCA
      sXg9wmVH88iN+wh/+l8YKx5FjYZQDj2D9Y4nER2XwveB17+OmJgHoojm60TKnINphLqCiZhA
      karXUFqPIJZshL46lPqPsW568qp6WLzhEO9Wn+SGKbkYJYld5+pYM61YZ1p8Ul+LCExN9FA3
      0EdYlllVeIm9YUhBmqnp6UIQBEpSUpmZnnnVTY8uv4+z3V1oqorJaGRmeqZO0WRVpaq9lZAs
      o2kauQmJZLrcF8chqypvnKiiNDWNBLOZg63NlKamU5QcH5seXCE79NGjR5EkCY/n6h5j+lkQ
      BAHBkY5ydgsaIkL+4pgfQnSmY5p9OZ/QsIOyBxoRXRkYCleiKgry3h+jhbxwmQJo3jZMq/8G
      0ZVJ5PjvUDtP6WRomobS+CmRqlcR7KmYb/gaoi1Jfx9vO+Hd/xdtoAXjrPswFK/ncstS7atH
      SitHzKpASMoheuTXE3w7sQhGZRAgL3FobHaTCW84rFOANu8gqwqmkmi2YDAa2FpzRidDuII8
      /KiisLuhnoa+XkpS04YK6ONU5BS7gxS7Y1QlMogiczJHT9RTNY3eYICanm4GQgFsJjM9AT8Q
      vwLAFQTCVFXFbrdj/hzZu7RgP+Hd/4F5yR8hR0OEd/wA6/p/0X3hhzD6yzdOXUP02MuEt/49
      anAAKW06YqI+e9E4/S5C276HlFqO3LgHy+q/07WrXdVEq17FuPi7aP0NhD/+PpZ1/3gx0qsp
      UUJb/hpjyQbEOUWEd/0QwZqAIXfJpXuUbyK05a8RvR1o3Wcwll/9AwGT7XasBiObz1ZjFCW8
      4TBThqUwLMrJ473TpyhITKK+v49lefGzaOw4V4tJkthQVMKB1maOtraMK6t0IhiqdoOmgT6y
      nW4OtTUzKz2WWfBKMeYeQBAEysvLyc/PH6vrVYPSW4fozEDtqwdvG4IlAXWgeewLL4NgdQ+Z
      PJ6pGPKXY1n7vZgUBeOchzFVPIZgcWO9+ftIKfozCJT2KqS8pYjubKQpNwzFIqKXBV3kEKq3
      DcwulM5qpPSZKC2HdTIkTyHWDf8fgiUB4+wHMc17PGY101SZSN8+wl1bUaMDEKdVKwoCa6YV
      449EaPd6uaWkLCY1IMedwC0lZVgMBtYXlZCfmBQjJyRHOdbWQlV764jEWM0D/czKyCLBYqUi
      M5va3vgZpicKRVURBYF1RSVku92sLyqN4UGNB2MqQFFREadPn6ahoWHcN4kXYmIe0bNbkOs+
      Jnr6fZTm/TGR4LEhINpTMM55GKnsdoQRsjgFUcKQuwjT3EfPrw76iSllzEKu/wS1vwHl3K6h
      Fch4WTqIwYJgdhLZ858orUeIHHwGKX14YpeA6M7GMOdhpNzFMTUDmqYSbPk1su8kmuLHX/8f
      qHIgridVNY3NZ6pxWyxMSXDz9qkTF0soL45CEEixO5iTkUWqwxmjhIqq8rsTVfQGA3T6fbx9
      6jiqppeR407kcEszfcEAB5obmTYCK8S1hkGScJktBKNRsl1u6np7Lpp+48GYCtDX10dDQwNe
      r/dzC4RpA01IWXPBYEa0JSGmlKDGmWIAQ19WtbcObbBl1FoFLexF7W8ckdJETC7CNOcRonuf
      RG07imXlXyFcTtKkykOBtrQytMFWDMUb4h6nFu1DCTZhzX4cc9r/3955R8l1nYf9d1+Zvr33
      gl1gUYlKgCTELlGiLIoqlijbspy4RD6OE7kpoo/jxMe2TpIjJU5iK5IV21EsS46qrUJJlFhF
      EASJvsBisb33NrvTX7n546HsYBbYnZldFGF+/yxwZt439713v1u++5Wn0AJbMRdPpSVjJhzC
      sCwe37SZBxs3Uej1pm3CHF0M4tN1Hm5qcVIbCsHkUrI16W1Nm9AUhR/1dFGdX8A9VZkvPTJF
      EYKfa9vO2GKQn/R1c6i+kZos3KlX3QOEw2EMw2BiYuKmhbcJbzFC0fA8/CyGYWD+5I/SNlFK
      2yT+4p9jTXYgbQO560Pouz6cdA/W5DniRz+H0P2gufA8/KwT9HK5HUKgqQlUnAAAIABJREFU
      1e5HVO1x/n+tFUhRweXDff9vI/yOM5zwpzkqKm6wE2BHQejY8Um0vJUrZl4Pj6YTNQwSloUi
      BMFYjECae7bLG2fDtkFKwokE3ms2qZqicLixmYM1dVnXGcsGr67zzs1b16Xe2Q0VQEpJU1MT
      iUSCJ5544qadYiqFdaiNDxD93u8ibQvXjveh5KXn72ENHEHGFvA+82VsI07867+M1vQgYtlS
      Kn7si3gefhalsI7EuW9idPzTimbQ6yFUF+6Dv0nshT8FBErZZrSm9MosKVoAT/WHWer+c4RQ
      0fJ2oAXSy5GU7/Gwv6aOL58+jkCwtbwi7QIYJT4/m8vK+fKp40ic8MdC780P/rnZ3FABjh07
      RigUoq2tje9///s888wzN20W0Le/H63l7ViWheZbISgjESZx/O+wpjvR6u5F3/0LSetrmQgh
      3PmAAqrujNZWIlmIlbgS4SU8hdjh5E2dlDZm74sY5/8Z4SvBfejjKYqoVu7A++7POMHyngLW
      cLiegtDywY5hmUFcJQ+nfT04XpYtJaVIyLgkUbk/gESiCEGZL1WB4qbJK/09jAYXaCkp4/6G
      poz98G8Xbtj6kZERbNtmbm6OmZmZrApFp4sQwtl0ugIrKl3i+N8hAuV4Hv8PyNgixoXvJn2u
      NT+MvTBE/IU/If7cH6BW7kIUJNu49W1PEX/p08SPfQHj3DdT/IDsyQ7MrudxPfQs6pZ3EX/1
      MyvuFYTuQ/EWZdT5bTNMuP+/4q35JQKbniU+9RxWuDttOUIIPLqOd6XU52sglIjzYm8372nb
      zrs2b+X5nk4iRvKA8Up/L/luD+9t20HUNDg5lp5l7nbkhm/sscceo7W1lfr6et7//vev3+gv
      JUzNQHsnTM6wYpL4SBTOXkDp6IJoaiC6Nd2JtukRFH8Z2uYnUsyPwuXD+97/iVp7AH37+3A/
      8myKN6jW8jhq9R7MwSO4DqTGHFhTHaj1hxB5FahVux3ffSPZ91zaBom514lNfBsrPkmqCVNi
      hnuIjX4JY/YlpJ3cqaQZBGmhF+xB829Cy9uGGe7iZjMdClMeCFAeyKMyL58Cj5f5SPK9ji8F
      2VZRSZ7bza7Kagbm5256OwFs02K8Y4j+o51E5kPpWo2TuKECFBUV0dTURFNTEzU1NeunAOOT
      cP4i+H1woQtGxpM/N0x4+XWwLIgl4NVjcI1dWq3dj3H261izvRhnvorW9NA1PyIQrgBa27tR
      Gt+2YsoSo/0b2MFhXPd8xFlOzfQk/0bNPszeF7FnujB7foLwFYHrqhlUSkls/GuY4YsIrZDI
      wF9hxZOd9sxwD5HBzyH0IhLBE0RHv5I0kyp6MUL1E59+nsTCWxiLZ9Dz1x4Ntl5U5eUxGVqi
      b26WntlpFmMxSq8pPthUVMKx4UGmwiGODg2smFlio5FS0v3qOeaHZ3D5PZz97jEiwcxT9tya
      BVxXH+zbBc31zt+ea2rWjk+C1wt7dmDvvWQRmUkebVx7fgnhKiLx/GdRqw+gtz6WdjPMvpdx
      7f5FlJJN6Dvej3nxB0mfqyXNuA9+HPP0PyAXBh0r0XJFsuOYoU68Nb+Au/QRXCUPYiy8kSQj
      PvMCrtK34y5/Cl/9r5GYeyXpc6F6CLR8CjN0gfj0D/HV/zqqN9UdQUobKzaOba586COlxIpP
      YsVGkTJ9c7VH13l6207OTYxzYWqKp7fvTHGGe6ChiQK3h1cH+mgpKWV7ZRpha8tIhGMsTS5g
      mennDLIMi7mhabY8uouaXY3U7Gxk4kLmXrxZuPtJxgd76RoYo7F1OyI8Ru9khMP33YuurjJT
      5AVgdh58PphbgMA1np4BP4QjztLHMCARdxRiGWIhhGu2Gmo/BqMJaIiBL02rheoi+sNnUQpq
      sKY6nWD05F9BrdyBq+xPnP9dawYV6iXT5TSKuwwrMoCWvyv5JzzVWNEBVCuMHRtB0VMLXyh6
      Mf6mf3vdZjozzdexIj1IK4639qNo/mRHtvjU9zAWTyOEhuKpxlvzy2nP2CU+P09tu74JVlUU
      7q1rYE9ldcbmx9mBKbpfbUf3upC2ZNd7DuLyrd1kq6gCRVOJLoTR/C4WJxcoacx8JsrK37Wg
      tIqdbp0T588hgAPbKjh9YZwDO1Y5INnZBsdOQVc/eD1w7+7kz4sLoakefvgSmrz0/YJr/IDa
      L8D+e5zvjozB+S44kObSwTYR3kJkfMmx7hjpncAKRcdb+0tEhv8WpIGWtx09f2/Sd9ylbycy
      9EXCnb+H0PLwN/5m2h3Tjo1gRQfwb/oUdmyU6OhXCLRcTQxsJ6YwFk8TaPlDQBDu/29Y0X40
      3+1XNafntfPsfM9BXAE34+1DDJ/sZdPhtae2V1SVtsfu4fyPTmIZJiWNFZS3ZjYTQVYKIFCl
      ybmOi6jePFTLTaCwCGskfCVuwLKs658e37sbLBtUBYSAxDUmytZGaKp1AvNdrpTPNcvCkjYy
      kUAAqmlgXivjEtdL4yFtE+nKg8gMeEuwjBiJFWRcXrOvmBlPq8Xd8PsgTVA8GKYNLJehotf8
      K5TyEIrqxlZcK/7GjbCNGLZUMQwT2xLYtpEkQxpxpFQwDBMQ2FLDTESxtdTfsSwra2teNjJs
      y8K2LaePKGAkjLSfh7ckwO4P3IdhmLg8LkzLcvaLGZBNzhL6e7sRmhuZULEjQ/zw+UF2Hn5n
      UgxAVmlRdB3TNFeebrduRjneDiWFMDMP9+3D5UrN6nCjkEjL5cea63V8fvpeRmt5GH0FGavH
      A6yeTcJU1IxDIqW+CWvejzH6eezEDN7K9yW1U+q1WL5aEiN/hVBcKIrEXdCGEOsbzrgeMhoP
      bKbjuRP4SvIITy9yz9OHVnxva0HRsr+XNcUEXxcpMS0LTdOQto1l2Wj6suCGDANiroqX11cA
      cEylC0EoKQb3yg/xRgoQ+dZv4H7b7yGj80gjgj1+FvfhTyxvAVZsnNjMS6iuMtylDyGUdN3C
      JWZkgPjsT9F8DbiK7kco6b80KW2sSA+KXoLiSo3NkFJiRfpAGqj+1hU7P2TXeaVtM9U9xszg
      FJWbayhpqMgoQ31kIUxwco6ypko0V+Yd+KbEBK8i4UrHEoqS1PlvCj4vVFdet/Ovhlq1G7P/
      VYTuxbz4A9TmZFOqFZ8mMvQFVG8jljFPdOTv07awmJFBoqN/j+JrxYz0E5v4VkbLByEUNP/m
      FTu/87lwzhECK4/868Hw6X4mLo5SWFtC/7GLzPSn76AI4Cv0U9qcXedfL27dOXYiAdOzEE9v
      /beeuA78GsJbjNH5PfRdz6BVJW/GjeAJ9MJD6IWH8FQ8jRUbRlqpG2UrPo0Z6kLaqT70xvxR
      3KXvQC84gKfygxiLZzbsfjaa8Y4hNj+8k/LWalof2snw6fTLpK4X0WCYhdFZbCs7D+VbUyJp
      cQneOAmBAIRCzoa48OZnCBaaC9fO5RFa18QDeGpIzL2CVvgAtjEHqAhl2dpbSoz514jPvITi
      KkJaUXwNv4WiXTXrqt5azFAnum8bdnwYRbt1mZCzxV8UYGFkhsL6UmYHJsmvSPXR2miklIyf
      H2L4dB8uv5uhN7vZ9dRBdE9mq4Ds9gCrcN09wJG3oLUZykucA67OHjh8b8rXVt0DrIEb7QFW
      Q0qL+NT3Scy9gVA9eGt/Gc3XePVzO06o+8/wb/okipZHdPybKHoh7tLHln3HIDbxTRLBMyh6
      Ab7aj6F6MjfbZUs26+Z4KErH86cIzy9RWFXM1rfvQc1w2ZtpOyzD4s2vvMy+Dx1GaAqDx7px
      +93U7dmUtqw1BcVvCFLCybOwFHYOvfy+1a+5VQgNx9lEWdHZTUqDcP9fIK0oQqi4ipP3EULR
      8VR9GK3s/aiqdssTY2WDO+Bl9/vuu9J5M3GNWZyY59S3XycyF6Jyax07330AzX1VEaRtM3i8
      h7Hzg+huF22P30Ne+fKZRmKbFqe/dRQjlkDRVGp2NqT+0Bq5NW9DCAguQWmRsxy6TctImaEL
      WOFufM3/Dnf1R4iMfOkaZzYVJNiJGRS9CDPcg9DzU+QIITLyFL0dEZdKsGbqF3b6n9+g6VAb
      9//GE9iWTf+x5HSUc0PTLIzOsv/DD7L50V1c+PGpJJcJcWkAiQbDuPxugmOzuHxrL8N6Lbdu
      D9BUDxNTzt/p2dWvuQVY0WGElkd84hsormKwY0g7cXUfIE2EouNv/C2kFULP34Udu8axD4kZ
      6iI28zKarxF36SNJ+4j1wjaCxKd/iLQTuMueQHWnl6P0ZhGZD1HSUI4rz0NxQxnzQ8kxGEvT
      QRRd5dwPjuPN92HGTSzDRL1Ut8G2bBRVYe/PHya6FKG8tYbw3AYGxW8IZSWOA1xpsfO3LPOg
      5o1E9TYSm/wOEojPvY60jeRzAMWF6msksXAMaUVIzB9FL9yfJMMM9xAb/wZawUFsY57o2P9b
      97gKaSeIDH4OxV2B5m8lMvCXSCvzlOEbSVVbHZ0/Oc3gW90Mneilekfy8iVQks/ApVlh4uII
      RjyBumz/puoq+ZVFTFwYxowbjHcMUbG5hky5NQqwFIJd25yqMLu2OXuB2xAr2o+n7EnMxRNo
      3mqE4kLaV4u+CaHgrfkoipaHsXQOX92/QPUk+0EZC2/hKn0cLW8Hnor3YIY6MmqLlDZmuBc7
      kRrsbsfGQHHjLnkYV9EhVF/jijEFtrmEudSObSxm1Ib1YPuT+8ivKmZhZJYtj+ykckty550b
      mqZuzyai82FKGysw4wbmMlO5EIK2x+7B5XczNzTNtnfsJVBybb6otXNrlkAlxY4P0IF7YGAE
      SlI9JG8HVHcVkaG/RvVvxVg8h6LnpyxfhOLCXfaOy/9LleFrwlw6i+ZtxY4NoOjpZ9iT0iY6
      /L+RZhjbmMdT9YGkmAHhKkaaQazYOEJoWNFBPBVPJckwo4NEB/8aPA0YU9/EV/cv0fzpW06y
      RXPptL5t+3WtQHnlBXS93E5ZSxUzfRMIRUF1JXdTVddo2Ne68UHxG8a2VjjZDi+85ijD3vSy
      IFxBSmcWUS451GXCpSwIK8mwYsNo/hYQKpqvGSs2iLTjK6zhb5ChrvAAdnyS6MBnUV2leGs/
      lpoYS0rActohtNScPdEhbHMJf+NvY8eniIx8KUkBFC0fT/UzRIY+D9LCXf4eFFdpkoz4xD/h
      rfsVpKsRYQwTm/gnAs2/u/bndJOwTIvC2hJCM4u4vC6EoiDtjQvFvTUKYEsn6ktRHX//TG4w
      EoXjZyASg8I8xzU6XVv/YghOnHVOpUuLYfd2WO7wJlRU3yY8tb+ONJcIdz1LuiYrITQ8lU+j
      lb4b5ZJD3LVY4S6io/8A2OiFh3CXP5lkNRJCwY6OEOr+U8csu5L12opcCi0VSGuFJaVQwb4U
      z2ybt61VSlEUyjZVsfnhnZgJk+P/+MqGJmK4NQpwrhMqy+HeGseX/7Jvfzqc7XAsSJXl0DsA
      F3qcuIF0ONXuzEbFRdBxEfqGoPVqCkhX8UOE+z5DuPuPkWYYd8VTCNV/A4E34jrlU60I0dEv
      42/6BCgeIkOfR4tsSQp4QfFim0FULYCdmEb1Jm8cbWOB2OR38Tf/DgiVcP9/RwtsQ/VczWDh
      qfogkYHPgVYM5hy++t/I8D42lvLN1Ux2jXL620dJRGLU721JWQKtJ7dGAYJL4NLh2EkoyHdG
      4nQJRZy9g645J8odK2RSWAgiLvSg6Brs3JrqNBeLOy4YuubMABPJ8byKFiDQ8ockli6gaIXo
      /swPXK7HZd+i2NRzSHMJIXTHlLo84suYQ/NtQkoTvWAvVmQgWYYZRGh5V6LNVHcVdmIqSQFU
      dyX+lk+RCA3h8tcluWus3804Zsz+Ny+iu3U2PbAtrWgvcPYI9zx9iKWpIC6vC2/BBrRzGbdm
      HizMdyK4fD640J0a7bUWmuqcfcTACJzuSBq5AYhG4dhpZGMdsrgQXn8rNWiitgpOn4eBYWcG
      aapP+RmhuNACO1A8G5MFWWh52EYQM9QJQhCfeQFlmbsFgOKuwlhqR6heEvNvpHiEKm7HkhKb
      /A7x6R9hxUZXTK6lqD5U36aN6fxAPBzl3HNvUbOjkcKaEs5851hGcb+KolBQWbThnR9ulQIs
      BB0LkKo4QfELK5jlbBsmZxAzcysW0aapHspLneVUa5Pz7+VMzUJlGVSUIusvmdquSfPB1lao
      KndmpL07oWhjKsRIK4IZPIEdH0s5A5DmEoqrCEUvxAxdxF32DqxIcpIAOz6KXngALbANb81H
      sBPJB4dC0fDVfxyEjrTj+Jv+TcpGXUqJFRvDmH0RK3r9XKk3vBMpiQbDTHWNEQ/HUtKRzA1N
      U9JYTkljOVXbnMEktphemOla27E0tcB0zziWYW5cWpQNo6wUwlHY3OwsQ8quMQ3aNhw9Af1D
      iJ4BeOtMau6giWln9K+uhI4u53R5OUWFzglzKOwE3psWeK6ZjhUF6mvgnm1ObPEGbLbsxCyh
      3v+MGe4kOvJ/SMy+nNT5hOrDjk85bhSqj/j0D1POEhR3NdIIoufvBmml7AEAFM2Pp/xdeCqe
      WjHw3gydI9TzaazIRUK9/yntBLwAM30TnPnnN1gYneXE115jaSaY9Hl+ZRHzI7NE5kMEJ+ax
      EiZuf+ZuCishpWTweDcXXzrL3NA0x//xVeKR1LxRa+XW7AHaWpyN72vHHDPorq3Jn88tOH8P
      7cU2DNSjJyG4mOwy3dkDh/ZAfh5MTjtLqUP7rn6e54ctmxBvOhVuOLAbbkFC1/jsq7iKH0Yt
      fBvCXiLS/9mk9Ie2uYSUJpp/M9KKogXanOwSy/YAil6Ap/rDRIa+gOKpwVvzi2m3Izb+DXx1
      vwq+HRDrJDr6j+gFyQH8UkqshBPToLpSzbEDb3ax7R17UTwa0bkw/W9cZNd7rnrx+ooCNB5o
      5dxzx1F1le3v2pfk6HYZy7Qwogk0VUMoaSYIMC3GO4bZ+4H7saTNxPlhJjqGaTjQuvrFK5CV
      AkQX5+jo6qOueQtqfI7+6Qj7dm1d3VCoqbDnBrZ/TXXMpFI605tlJpsnl38HIGGkmkCFgLpq
      ZE1lxu7Q64FQ3VfMktI2gOT7cBxyFfyNvw2Ki3DfZxBq6qhpxyedv4k5Z+OspbdvEooHaUUQ
      OBvvlX5j+FQfo+0DANTva6HmGjcFoQhOfvMIlmGiuXTKNiW7dQshqNhSS8WW6++XQtNBOp4/
      hWmY5JUVsO0dabpUC4FtWpz8xhGna8QNmg6laf1bRlZ5gYLBEA2NtZw8cQpFJmhrLOJM9zS7
      W7MsnFCQ76zHX3od1bKgtjo1d9Curc7SyOVyssbdv39lWbcYV8nDRAa/QGLxPNhhvNUfSvpc
      6MV4Kt/L4oXfdwLaPdXohQeTvmPFJ0nMHyHQ8ixmpN9Ji9L8O2m1w1v7UUK9n4GJb4M08Dcl
      Xx+eW2Kic5gDzzyIlJKT3zhCcV1p0kbUjBtIKQmUFhCaWXTW32nS+eIZNj+yE2+Rn+GTfYyc
      7k9r9L48uFqGie5zE50PXXGUy4Ss0qIUlxTwyquv0XbPLvp7ZqhqrGP0dBDTdNagN0yLshpb
      WyAUxpYSJS/gHJgtx+NBKS5EGRzBamtBqkpK6hQxv4ByoRd0DWPXVmQGscNWuBNj5jnQS3FX
      fBChphu7oKPkHcQY/wpqYAdSb8C45l6Uwsdxe7cj7Siqp+HSxHb1XuzoDKiFGJaGVEuxEvNp
      pxJBKcfT/MeY0VE0TzW2lpckI7wQwhXwYAsJAjSvTmQxjOq9uoSJLUXZ9q59qC6N6HyY0TN9
      Ke1YnJhn8FgXqlun5cHtKWbQeDiO7ndjI/EVB5gfmk7rXmzDQiiCHU8dxIgbLI7OEVpYSv95
      XCKLiDDJsee/jyxrpL6qkoun3iDgd5PfcpAt1Y5P/IZmhTh7wVkiNdU7eUYry5LNmOEIvPYm
      9r5d2JEoWncfPHS/s3RaI2ZkgOjIl3DX/Ap2dAgzeAx/8ydIJ47IWGwnPv0cesVHsMPnsWMD
      +Oo/ntbpppQm4b7PovpasKID6AV7cZc8subrk9pzHf8Z27I5+fXXKKwtQdqSpekgu5++D0W9
      aicZfKub0fODlDSWM3VxlLbHdyctg2KLEU5+63W2P7GXRCRO/xud7PvQ25KWOANvdrEwNktB
      TTGTnaNsf2IfeeVrt75dzg2aCMfxlQaYujDKPU8fyshkmnVWiB2HDtNYVYrX6+Hg4cNUt+5m
      c3VqQMiGMDXtmD/zA7BlU2qC3Zk555S4uBCqKxyLTzQ9F2Ez1OH4+EcHUfQCpLmItNKzOJhL
      Z3GVPIzqqcZd8iBWdCjlO1JaGIvtJOZev3QwljwmCaHha/jXKHoR7rJ3pkSdrQeKqrDjyf0s
      jM6yNB1k+zv3JXV+gLq9m6horWb4ZC9Nh9ooa06ulTA/MkNhdQmRhfCVIKDYUvIzr9/fQs2u
      JqyEyY4n95NXll5/EULQcng7ZZuqsE3b6fz5mUcUZrUE8ucX4l/Wfl/mXqnpU1LsHGA11ELf
      oNPZl1Nc5CThXVyCaNzJQudJzySneutZuvjvcRU/ihnpRVH1tPMCaYGtJOZ+iu6qx4x0obqT
      N45S2sTGvoptLKLoRcRnXyTQ/LspSy1F8+MufTSt304H27bp+PEpfEV5SNum84Uz7Pq5A1ci
      sACme8eZHZiibl8Lw6f7yK8oJL/yqsk1r7yQE197jeod9USDERKReIoZVFEUyporKawrydiT
      U1EVKrbUUGyUZ+0Nent6RK2FHW2O9efoCSemeNM1tvGAD3a0IU6dQ+3ph4N7HJeHNLBjE7iK
      7keaQTR/MwgtJb//amj5u9HydxMb/iJWpAdvXXKZVGksYIZ78DV8HE/1M2i+5oxSp0gpsROz
      WInpjLJDB8fmUDWVrW/fzbYn9mIZJkvTyXb+oeM9bH9yP833t9H26D30v5kccxCZW6KspYpo
      MILuceEOeEhE01+b25ZNeHaJ2NL6H6Jdy62xDa4HuuZ4b14PIaCqHFlRmrEZVGgBFHc57qpf
      dJzW+v9L2kmnhFBwlzyEWnD/yt6giu4olbRAaNjmApqaXn0vgPjU94hPfQ8Aveh+fLUfS+t6
      3aNjRBPOIZ0EM5ZISVylujWMSBxXwE0sFMXlTTYq6F4X4dlFfEV5mAkDM26mbaExEyanv32U
      2f4JhKqw/Yl91OxqTEtGOty5CnAT0Av2YS61E+79NNhxx4SZdmrEy6y86RVqAE/l+wh1/UdQ
      3Ki+RrS8tWdLBrCiI8Rnfkz+tr8AobLU9R8wljrQ05DjL8mnuL6MN7/8ElJC9fZ6vIXJG8st
      j+yi/ftvIYRAURV2P33ompsRju++4NI2Rqad8GDkdB/Stnn7Jz9AdCHMkb95nrKWqrSd6tbK
      nasApul4gE7POk5tm5vTd2VIGI4v0XzQsSA11SXJEIqOt+5XMWNTCNWL5lp/XyEhBHrBfjT/
      FpAJhF6ctq++tCIIxXNJOQWKXuiUXkqzHU33tVG9sxEhwOX3pFiq/MV57P/wg0SCIfxFeSmj
      eyISJ6+8ECMaR/e5QYi0zwri4RiefB9CCFw+N7aVmtk7EY7T/Wo7obklGg9spry1OuOYgTt3
      D3DuomPZObjHcWbry6CS/cl254Dt4B6nKs3otRkdnCWM4ipDZLAsWStCCBQ9H8VVmlGgiupr
      QtGLiAz8DyJDn8dOzKEX7Fv9whXa4cnz4g54r9uhNJeGt9C/4tLGX5LHVPcovuI8zLhBPBTF
      5U1v5K69p4np3nHav/smJ772U6q21uFeNvpL2+bcD45T3FBB29t3M3yql4WRmRtIvDF3rgLM
      zDollgJ+aGmEscn0ZSwEnQIdoxNOTME18QB3CkLR8Td9Ai1vB6q3gUDrH2WUesWIJRhtH2Ds
      3CBmIrUa5mosTS7QfN9Wylur2XR4G/6SPMdrNA38RQEOffRRvIV+anY1sePdyZYoy7SJh6KU
      t1bhKwpQsaWWueG7UQHKSp1IsKUwdPc5XqHp4nLB8bNOQM6bp50zgzsUoXpxlz6Op/xJlDT9
      hMCxvJz5zjHCc0ssTS3Q/v230j7FL6wpITg+R155AaqmIm2JJy/NslVC4CsK0PrgDup2N6fM
      NKqm4MnzMnlx1HHfuDBMcX3mrjd3rgLs2AJCgbdOOzb/5tRgllVJJKC20knT0tK0YlyClDZ2
      fBJpXj+ViBWfxAz3XtdEKm0TOz6xcqzubcLC2Cwuj4u63c3U7291orsm09tHePJ9tD2+m+6f
      nmfs3CD3vPdgxrlDr4dQrh7Ydb1wlsYDmymsST/TxmXu3E2wqjpKwJbMZbhczvKpIN9xr77G
      RCntBJHhv8NOzCCtKN6q96Pl77myPpZSkph90QloFwLVXYt/0x+gaFf3C9KKEhn6ApYZATuG
      t+YX0PxbNjTQOxPcPjfTveOE50MgJbHFSIqZczWEEBTVlrLvg4c3qJUOutfNtif2rktalDt3
      BlgP9uyAE5fSswSXHGVYhhE8gVC9+Jo/ha/5k8Qmvg3LEmNhx4iO/F/ytvwZhbv+BqEXEp/+
      UZKM+OzLqL5mfE2fxNfwW8TGvnoTbix9bFuiaCqX3TAUTc3ckfEO4s6dAQzDqTQ/uwDV5U54
      Y7qZl70e5xR5dt6JDLt2BrAiKJrj6yGEDgiktK6YtqW0kdJEqM46V9HyUgpoSCt8JUePUNxO
      Mb3bECth4A54HdO9ItC9Liwjs8JzNyK6GKHjRydZmlqgZmcjmx7YluRzJKVk4sIww6d6cfu9
      juv0BsYG37kzQHunUyLpgf1OWGXvQPoyTrVDRRk88oAThXaNQ51eeABj8Qyxsa8SGfocWsGe
      JB8doXpxlzxKqOfThPo+ixE8kVQbAJzUKonZl4iPf43I0P/ClaEX50bjyfcTHJtF1Z2M16GZ
      RdyB9Q1nBGj/7psU1ZWy632HCI7PMXImucpMcGyO0fYBdrz7Xmp2NXL+ByewMwisXyt3rgLM
      XRq1fd5LmaYzMGEGQ1BTCX4vNNTAVLI5TdHyCGz6JKqvGXf5z+HdrT6pAAAIAklEQVSpeG/S
      2l0IBW/dr+Cp+nk0fyt5W/48pfiF6i7F3/z7KN46vFXP4Cp57LZb/wOEZxep2dVI06E2Wh50
      vC2jwfXftC9NLVC1rZ68sgIq2+qYG0x+bwujs5RtqsJX6Ke4oRwzYWJmEHizVu5cBagoh4u9
      juWmswfqVinOvRIlRdAz4JwHdA+sYEoVCNWLXngQ1dey4iGVECquwnudYHRXMaln/wJFy0Mv
      vA/F23Bbdn5wAtrDs0soqpOKMB6KEShZf9f2ovoyBo5dZHZgkuHTfZRvTn5vJY3lTFwYZnFi
      nvHzQ7j87g0tpndrSiStkRsGxNi2U2l+ctqZCRprV3SFuGGJJNNylGduHpobnNlgBRmr1wle
      HdM0M64TvJ7cyHISnl2i9/UOhKLQcnjbddfe2VhfzLhB1yvnWBiboX5vC7U7G5OfuZTMj84y
      cOwi3kI/mw5vR18hsD7bdoATEHPnKsAayaZG2GXuFgW422RkXyc4R447nKwV4PIEIqW8K+zG
      OX62yEoBZkZ7+fa3nsNEcuLIC/zgBz9iPnp72rlz5FiJrA7CiioaqK+cR9oRwrKIJx6p4vi5
      Ye7d13BlRjDN7BQiWxlSyit7iWzaIITIqrbX5X3ErZ4lb4d3cjvJyEoBVE1DSAAFaSWwEokr
      aUcum/uyNftlU5LzWjnZtmE9ZNwO3OrneTvJyCoz3Fh/F+Nz4+gXiyjyGrx4tJsHHn30iqVD
      UZSsLCeXZ5FsZFy2AmUj4zLZ3osQ4pZbgdbjWfwsyVg3M+hlMcs1MmcGvUrODHr7yRAinRRn
      qwtbL1E5ctw0cucAOe5qcgqQ464mpwA57mpyCpDjrianADnuanIKkOOuJqcAOe5qcgqQ464m
      pwA57mpyCpDjrianADnuanIKkOOuJqcAOe5q1k0BErEI8wuLbFiKiRw5NoB1coe2OfLyC2i6
      TtW2B2ipupn1UnPkyJz1mQGsMEqgjvsP72N2eGpdRObIcTNYnxlA8WKEZ5kfE6gFVat/P0eO
      24T1mQGExs6tdVyYkuzbUr7693PkuE1Yt5DIivrNVFyqUrQ8WVY2IcfL5dxqGdmmRVmPdqwH
      2b6TnzUZG1Igw7btK427HFCeKbeDjMv3kq0C3OqcQJfJ9nn+LMnYEAW4nD1hPbJCAFnJuKyM
      2WR0sCwr65QmpmmiquotTx6Q7Tv5WZOxodmhLy8dsrkesss48bMkYz3I9p38LMnY8PToOXLc
      zmx4enQpJX2dZ3nzeDumnZ6eSWnRdf40R44dJ55FsbZ4ZJHOzsHMT6ilpPPsKV574wyZruBN
      I8pbr/+Uc119ZDLc2JbFxY4OlmImAxfPcuStM1hpCZJEFuc43zWItC06zxzn6LFTxM107kgS
      nJmga8Cpo5aIzNPeNZTWfYBkemyIgbFZpG1w+s0jnL3Qk9YzkVIyNtDD6EwIKxHm6Kuvcr57
      eNX3Oz0+xKuv/pSJuRBj/Z28fOQtYIN9gczwLKNLNiUug7GZ9IouY1sUVjZSKOJMLoQybIHN
      qWNvMDieQf2wS0RneumejtPa0pDxw5ofvkjEVcZoTyfxDBQgtjjHYG8XM4txekeCNBcLOvtn
      05IxOT5JT3c3tmVSXN1MQAkzNrWUhgTJxPAwvf1DYJscPfoW07PpHnpKJgZ66B2epP/8GSJq
      AbUpZalWkWAZTPVfpHd8nsmL51HL6ujvOLv6AKd42LOjhQsXztDRO8HeZqeW84YqgG1a5OXl
      4/f5iCWMtK4Visbc2EWm7TxqMqxVNTFwnjnpwwwHSaQ12l0lEQ6h6CodR19hOprZTKToXoIT
      g8Rtm0ymAF9RGQ21pUgJLk8BgaIirGh89QuvIGhs3YzHraBoOjODHSxpRdRXpvNcFZq3tOLS
      BWM97SS0PCLz8xhWOs9VoaVtM5oKoUgIpMmRN45ip/FMFM1Fy5ZmFAHC52N8sA8L16oKoMoY
      r75xlv27t+Fy55NXUnqpRRuI7gswPtDJqQs9FOcHVr9gGUZkjmNnevEQYTGSzsu+SkFpPTua
      q0BK0lyBXcFfXks8OEVMSLQMN1xGLIbicaMgsTJox+LcJJ3dfVzovEh8rocjR89QUl28dgHS
      out8O0OD/fT2DXDqfB+KESMSS2NQkiYXzp1jsK+bhLuczQ2VSEWQ1tpSJjh39jz9PRfxBEpY
      mp3DstJ7ppYR5Wx7J31dF5iZC+PzesCWqzbj6OtH8OfnMT2XwA6N8JMfHwU22AoEYCYSmFLi
      drlXqj93XZzEuAZSgqbpKEqGu30psaVEKEpK/ca1kojHsFHwuF0ZNkESj0VRNBcuPX2znW1b
      mKYFQqBgY1jg8bjXfj+XkgzbUqKoKtKykAg0XUNZ60uREsM0HZOy5lwnpUzPNCwlhmEgcUzb
      iXgMRXOh69qa70VKiWkYTvs1lUQ8hnpJxo0wTQPbdu5fSJu4YeH3eXNWoBx3L7kieTnuenIK
      kOOuJqcAOe5qNsQXKMf6EQ7OMjKxQEGBj1AoTEFJGZoVA3eAoryVK7nnWDu5GeA2xooF+eJf
      fYHe/n7GJsf527/8PDPzQb72t3/NN7/zQkanyjmSyc0AtzGx+VFKmw/x5DsfBeBs8xs0FcEP
      PaXYk0PETBuvnhvDsiH39G5j3AXlTPSe4OzpU8wsxQBB9/lzeAIBRDxI//TirW7iHU/uHOA2
      Z3Z8gPbOYfYdOsTC5Dgel4KvuAIRmWdJCVBR6LvVTbxjyblD57irEUKI/w+quH/ATxgM6AAA
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
